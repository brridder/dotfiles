
# Check for an interactive session
[ -z "$PS1" ] && return

alias ls='ls -G'
alias ll='ls -lh'
alias la='ls -a'
alias exit='clear;exit'
alias x='startx'
alias ctags_2='ctags -R --exclude=android'
#export DEVELOPER_DIR="/Applications/Xcode.app/Contents/Developer"

GREEN=82
RED=160
WHITE=231
BLUE=39
PROMPT="%F{82}[%(?.%F{231}^_^.%F{160}o_O) %F{82}%n %F{39}%*%F{82}] %F{82}%~ %F{231}"$'\n'"$ "

alias ctags-generate='find . -type f -iname *.[chS] | xargs ctags -a'

#PATH="/usr/local/opt/ruby/bin:$PATH"
#PATH="/Users/ben/bin:$PATH"
PATH="/opt/homebrew/bin:$PATH"
PATH="/opt/homebrew/lib:$PATH"
#PATH="/Users/ben/workspace/zls/zig-out/bin:$PATH"
#PATH="/Users/ben/workspace/homebrew/Cellar/ruby/3.1.2_1/bin:$PATH"
#PATH="/Users/ben/workspace/homebrew/Cellar/ruby/3.1.2_1/lib:$PATH"
#PATH="/Users/ben/workspace/homebrew/lib/ruby/gems/3.1.0/bin:$PATH"
PATH="/Applications/ArmGNUToolchain/13.2.Rel1/arm-none-eabi/bin:$PATH"
#PATH="/Users/ben.ridder/workspace/gcc-arm-none-eabi-10.3-2021.10/bin/:$PATH"
#PATH="/Applications/STMicroelectronics/STM32Cube/STM32CubeProgrammer/STM32CubeProgrammer.app/Contents/MacOs/bin:$PATH"
PATH="/Applications/STMicroelectronics/STM32Cube/STM32CubeProgrammer/STM32CubeProgrammer.app/Contents/MacOs/bin:$PATH"
PATH="/Applications/STM32CubeIDE.app/Contents/Eclipse/plugins/com.st.stm32cube.ide.mcu.externaltools.stlink-gdb-server.macos64_2.1.400.202404281720/tools/bin:$PATH"
PATH="/Users/ben.ridder/.local/bin:$PATH"
PATH="/Users/ben.ridder/workspace/bin:$PATH"

function find_replace {
  if [[ ${PWD:0:7} != "/Users/" ]]; then
    echo "Wrong directory: $PWD"
    return -1
  fi

  if [[ $# < 2 ]]; then
    echo "Not enough arguments $#"
    echo "${FUNCNAME[0]} string_to_replace new_string"
    return -1
  fi

  REPLACEMENT_STRING="s/$1/$2/g"
  echo "Replacing $1 with $2 in the following files:"
  ag -Q "$1" -l
  echo "Is this okay? (y/n):"
  read -k 1  okay_to_continue
  echo ""
  if [[ $okay_to_continue == "y" ]]; then
    ag -Q "$1" -l | xargs sed -i '' "$REPLACEMENT_STRING"
  else
    echo "Exiting"
    return 0
  fi
}
#alias gn-format='find . -name BUILD.gn | xargs gn format && find . -name *.gni | xargs gn format && find . -name BUILDCONFIG.gn | xargs gn format'
alias gn-format='find . -type f \( -name "*.gn" -o -name "*.gni" \) -exec ./gn format {} \;'

set -o vi

export SDKROOT="`xcrun --show-sdk-path`"

export EDITOR=nvim
export VISUAL=nvim

autoload edit-command-line; zle -N edit-command-line
bindkey -M vicmd v edit-command-line
